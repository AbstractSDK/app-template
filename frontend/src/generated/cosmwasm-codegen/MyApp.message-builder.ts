// @ts-nocheck
          /**
* This file was automatically generated by @abstract-money/ts-codegen@0.35.5.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @abstract-money/ts-codegen generate command to regenerate this file.
*/

import { ExecuteMsg, BaseExecuteMsg, MyAppExecuteMsg, Binary, CallbackResult, QueryRequestForEmpty, BankQuery, StakingQuery, DistributionQuery, IbcQuery, WasmQuery, ResultOfArrayOfBinaryOrErrorResponse, Uint64, ResultOfExecutionResponseOrString, ChainName, Namespace, ModuleVersion, IbcResponseMsg, PageRequest, Empty, ErrorResponse, ExecutionResponse, SubMsgResponse, Event, Attribute, ModuleIbcMsg, ModuleInfo, Addr, InstantiateMsg, BaseInstantiateMsg, AccountBase, MyAppInstantiateMsg, MigrateMsg, BaseMigrateMsg, MyAppMigrateMsg, QueryMsg, BaseQueryMsg, MyAppQueryMsg } from "./MyApp.types";
import { CamelCasedProperties } from "type-fest";
export abstract class MyAppExecuteMsgBuilder {
static base = (baseExecuteMsg: BaseExecuteMsg): ExecuteMsg => {
  return {
    base: baseExecuteMsg
  };
};
static module = (myAppExecuteMsg: MyAppExecuteMsg): ExecuteMsg => {
  return {
    module: myAppExecuteMsg
  };
};
static ibcCallback = ({
  id,
  msg,
  result
}: CamelCasedProperties<Extract<ExecuteMsg, {
  ibc_callback: unknown;
}>["ibc_callback"]>): ExecuteMsg => {
  return {
    ibc_callback: ({
      id,
      msg,
      result
    } as const)
  };
};
static moduleIbc = ({
  clientChain,
  msg,
  sourceModule
}: CamelCasedProperties<Extract<ExecuteMsg, {
  module_ibc: unknown;
}>["module_ibc"]>): ExecuteMsg => {
  return {
    module_ibc: ({
      client_chain: clientChain,
      msg,
      source_module: sourceModule
    } as const)
  };
};
static receive = (): ExecuteMsg => {
  return {
    receive: ({} as const)
  };
};
}
export abstract class MyAppQueryMsgBuilder {
static base = (baseQueryMsg: BaseQueryMsg): QueryMsg => {
  return {
    base: baseQueryMsg
  };
};
static module = (myAppQueryMsg: MyAppQueryMsg): QueryMsg => {
  return {
    module: myAppQueryMsg
  };
};
}